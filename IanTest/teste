#########################################################
#  Programa de exemplo de uso do Bitmap Display Tool   	#
#  ISC Out 2017	  			  		#
#  Marcus Vinicius Lamar		  		#
#########################################################
.data
#FILES
MAPFILE: 	.asciiz "map.bin"
CAR1FILE: 	.asciiz "car1.bin"
CAR2FILE: 	.asciiz "car2.bin"
CAR3FILE: 	.asciiz "car3.bin"
SNAKEFILE: 	.asciiz "cobra.bin"
FROGFILE: 	.asciiz "frog.bin"
CROCFILE: 	.asciiz "jacare.bin"
FLYFILE: 	.asciiz "mosca.bin"
INITFILE: 	.asciiz "display.bin"
MENUFILE: 	.asciiz "menuenter.bin"

#SIZE
MAPSIZE: 	.space 76800
CAR1SIZE: 	.space 720
CAR2SIZE: 	.space 396
CAR3SIZE: 	.space 396
SNAKESIZE:	.space 520
FROGSIZE: 	.space 340
CROCSIZE: 	.space 1440
FLYSIZE: 	.space 288
INITSIZE: 	.space 76800
MENUSIZE: 	.space 25773

#POSITION
MAPPOS: 	.word 0xFF000000
CAR1POS: 	.word 0xFF000000
CAR2POS: 	.word 0xFF000000
CAR3POS: 	.word 0xFF000000
SNAKEPOS:	.word 0xFF000000
FROGPOS: 	.word 0xFF000000
CROCPOS: 	.word 0xFF000000
FLYPOS: 	.word 0xFF000000
INITPOS: 	.word 0xFF000000
MENUPOS: 	.word 0xFF004B3C


.macro LOADFILE(%filename, %filepos, %filesize) #Load any file basically
# Abre o arquivo
	la $a0, %filename	# Endereço da string do nome do arquivo
	li $a1,0		# Leitura
	li $a2,0		# binário
	li $v0,13		# syscall de open file
	syscall			# retorna em $v0 o descritor do arquivo
	
	move $t0,$v0		# salva o descritor em $t0
	
# Le o arquivos para a memoria VGA
	move $a0,$t0		# $a0 recebe o descritor
	la $a1,%filepos		# endereco de destino dos bytes lidos
	li $a2,%filesize	# quantidade de bytes
	li $v0,14		# syscall de read file
	syscall			# retorna em $v0 o numero de bytes lidos

#Fecha o arquivo
	move $a0,$t0		# $a0 recebe o descritor
	li $v0,16		# syscall de close file
	syscall			# retorna se foi tudo Ok

.end_macro
.macro SLEEP(%duration)
	li $a0, %duration #MILISSECONDS
	li $v0, 32
	syscall
.end_macro
.text

#OPENINIT
	LOADFILE(INITFILE, 0XFF000000, 76800)
#SLEEP DE 3 SEG
	SLEEP(2000)
#OPENMENU
	LOADFILE(MENUFILE, 0xFF004B3C, 25773)
# devolve o controle ao sistema operacional
FIM:	li $v0,10		# syscall de exit
	syscall
